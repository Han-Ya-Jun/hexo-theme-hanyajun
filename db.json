{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/favicon_16.ico","path":"favicon_16.ico","modified":1,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":0},{"_id":"source/img/favicon_16.ico","path":"img/favicon_16.ico","modified":1,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":1,"renderable":0},{"_id":"source/img/article/tag.png","path":"img/article/tag.png","modified":1,"renderable":0},{"_id":"source/img/avatar/self.jpg","path":"img/avatar/self.jpg","modified":1,"renderable":0},{"_id":"source/img/upload/beian.png","path":"img/upload/beian.png","modified":1,"renderable":0},{"_id":"source/img/upload/self.jpg","path":"img/upload/self.jpg","modified":1,"renderable":0},{"_id":"source/img/upload/wechat.jpg","path":"img/upload/wechat.jpg","modified":1,"renderable":0},{"_id":"source/img/upload/wechat1.jpg","path":"img/upload/wechat1.jpg","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/css/archive.styl","path":"css/archive.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/beantech.css","path":"css/beantech.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/beantech.min.css","path":"css/beantech.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/donate.css","path":"css/donate.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/rocket.styl","path":"css/rocket.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/signature.styl","path":"css/signature.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/toc.styl","path":"css/toc.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/widget.styl","path":"css/widget.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/hux-blog.js","path":"js/hux-blog.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/smoothscroll.js","path":"js/smoothscroll.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/image/beian.png","path":"image/beian.png","modified":1,"renderable":1},{"_id":"source/img/header_img/about.jpg","path":"img/header_img/about.jpg","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/bootstrap.js","path":"js/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"source/img/header_img/archives-widget.jpg","path":"img/header_img/archives-widget.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/archive.jpg","path":"img/header_img/archive.jpg","modified":1,"renderable":0},{"_id":"source/img/upload/wechat-qcode.jpg","path":"img/upload/wechat-qcode.jpg","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/css/bootstrap.css","path":"css/bootstrap.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/images/ironman.png","path":"css/images/ironman.png","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/images/rocket.png","path":"css/images/rocket.png","modified":1,"renderable":1},{"_id":"source/img/signature/BeanTechSign-white.png","path":"img/signature/BeanTechSign-white.png","modified":1,"renderable":0},{"_id":"source/img/signature/BeanTechSign-black.png","path":"img/signature/BeanTechSign-black.png","modified":1,"renderable":0},{"_id":"source/img/upload/alipay.jpg","path":"img/upload/alipay.jpg","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"source/img/avatar/ironman.png","path":"img/avatar/ironman.png","modified":1,"renderable":0},{"_id":"source/img/article_header/article_bg.jpg","path":"img/article_header/article_bg.jpg","modified":1,"renderable":0},{"_id":"source/img/article/huweihuang_blog.png","path":"img/article/huweihuang_blog.png","modified":1,"renderable":0},{"_id":"source/img/blog.jpg","path":"img/blog.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/home.jpg","path":"img/header_img/home.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/tag.png","path":"img/header_img/tag.png","modified":1,"renderable":0},{"_id":"source/img/article_header/article_header.png","path":"img/article_header/article_header.png","modified":1,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":1,"renderable":0},{"_id":"source/img/header_img/home2.png","path":"img/header_img/home2.png","modified":1,"renderable":0},{"_id":"source/img/header_img/404.png","path":"img/header_img/404.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"4b6d26ba3203732d58d605a139fbf5dfcb8fe045","modified":1555779011556},{"_id":"source/CNAME","hash":"9b6ca917a27a664a8204435a82ad932813ba1352","modified":1555690067705},{"_id":"source/favicon.ico","hash":"3b8ff98fdd0d94430e84e4c0a4d2671aa5523634","modified":1540799569000},{"_id":"source/favicon_16.ico","hash":"195d5b123306a1c126cf7753fa33fd4cee9ebf49","modified":1540800529000},{"_id":"themes/huweihuang/LICENSE","hash":"c48eaae47a703282e0ffe7b91d69366452046214","modified":1555668884059},{"_id":"themes/huweihuang/_config.yml","hash":"93c0edabaf1d97a8f429dbd9ff9d97286edb3b56","modified":1555769746749},{"_id":"source/_data/recommended_posts.json","hash":"41e56459f9a6943afbe923f157afebbdab434fc5","modified":1555805135209},{"_id":"source/_posts/hexo-theme-huweihuang.md","hash":"d97ca72477b5b7975cf3005e3fa6a1441ed18813","modified":1555985798792},{"_id":"source/_posts/kubenetes_concept.md","hash":"a9e1b0bfc8512544ef10e065b8c32d6cf2476000","modified":1555799752257},{"_id":"source/_posts/kubernetes_architecture.md","hash":"96ee67ab46d4e6112f4342387af31e0fb8cf9f6e","modified":1555799711091},{"_id":"source/_discarded/rain_worry.md","hash":"8216897802b1bd506388434453e728b70660d5ad","modified":1555985036266},{"_id":"source/about/index.md","hash":"1205d3dedbcaa9582aa31c3ddca37a05c9a60fbd","modified":1555805522115},{"_id":"source/archive/index.md","hash":"6e5aa37db83a9974241fe708ac524f22ff80312a","modified":1555779011599},{"_id":"source/img/favicon.ico","hash":"3b8ff98fdd0d94430e84e4c0a4d2671aa5523634","modified":1540799569000},{"_id":"source/img/favicon_16.ico","hash":"195d5b123306a1c126cf7753fa33fd4cee9ebf49","modified":1540800529000},{"_id":"source/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1555668884047},{"_id":"source/tags/index.md","hash":"10e75e8ef8a6b4b86aab6b2b36836ca4bd0b1744","modified":1555778199070},{"_id":"themes/huweihuang/languages_to_be_added/de.yml","hash":"02a98ba2b93e30a00ae7979fbe90b767a27290f0","modified":1555668884061},{"_id":"themes/huweihuang/languages_to_be_added/default.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1555668884063},{"_id":"themes/huweihuang/languages_to_be_added/en.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1555668884064},{"_id":"themes/huweihuang/languages_to_be_added/es.yml","hash":"fb089145368422ac47da9eb00fed05b15c904aa2","modified":1555668884065},{"_id":"themes/huweihuang/languages_to_be_added/no.yml","hash":"5ce3a1043ff85cecf83f3b5b0cdad2df44fa0192","modified":1555668884066},{"_id":"themes/huweihuang/languages_to_be_added/pl.yml","hash":"6dc5d1b2aa75ae4c527089a770f43bafb91d80f4","modified":1555668884067},{"_id":"themes/huweihuang/languages_to_be_added/ru.yml","hash":"2cfaf93704ea4ac3f374c69bab89ca31916faa33","modified":1555668884068},{"_id":"themes/huweihuang/languages_to_be_added/zh-CN.yml","hash":"6d712d9eb6ba12213dcd76b532cd86e9da83cfa3","modified":1555668884069},{"_id":"themes/huweihuang/languages_to_be_added/zh-TW.yml","hash":"45c84384a05fdb7e32a3e2d498ea180be7dccfa9","modified":1555668884070},{"_id":"themes/huweihuang/layout/404.ejs","hash":"2e8d719fab50014b7963d3c2f4ee34c23e749d7b","modified":1555668884070},{"_id":"themes/huweihuang/layout/about.ejs","hash":"96c08fc3580b842ad9d8f37f2cdf02e6fa57d7bc","modified":1555765734940},{"_id":"themes/huweihuang/layout/archive.ejs","hash":"ecceabc23782ace58bd98d76dd4a97027ce5706e","modified":1555668884091},{"_id":"themes/huweihuang/layout/index.ejs","hash":"16de8917ce73261d55f881bb7a678e5132dac6c5","modified":1555782971151},{"_id":"themes/huweihuang/layout/keynote.ejs","hash":"e177b9e4a159f40b512f4ae1bfd928be4ab60840","modified":1555668884093},{"_id":"themes/huweihuang/layout/layout.ejs","hash":"389fc11a45676f94b77ebd2cb0d658a0358979c8","modified":1555668884094},{"_id":"themes/huweihuang/layout/page.ejs","hash":"f77a9eb0e09931eac85e8244027eb5678c7b0705","modified":1555668884095},{"_id":"themes/huweihuang/layout/post.ejs","hash":"4f41b3e96185a1707f0bc7bfdbb02567a8a3e9d1","modified":1555817245277},{"_id":"themes/huweihuang/layout/tags.ejs","hash":"63911a99e6daf9968bfdd7d69f0d3d697039902e","modified":1555668884097},{"_id":"source/img/article/tag.png","hash":"c8632d64d9471009098b84f70273e63037a4e7b8","modified":1555668883971},{"_id":"source/img/avatar/self.jpg","hash":"085917d4db5dae2fbc73b83c7e8c1a1fb562213c","modified":1546487798000},{"_id":"source/img/upload/beian.png","hash":"e8a9b658667041bc3c2c337337c90996eecf460d","modified":1540807241000},{"_id":"source/img/upload/self.jpg","hash":"085917d4db5dae2fbc73b83c7e8c1a1fb562213c","modified":1546487798000},{"_id":"source/img/upload/wechat.jpg","hash":"c4268550621c1228ff9dd5ab399b97934f6a6e12","modified":1546487798000},{"_id":"source/img/upload/wechat1.jpg","hash":"7d3f2e5ba29e7eaac928c50ee996d253019d9e9b","modified":1546487798000},{"_id":"themes/huweihuang/layout/_partial/footer.ejs","hash":"9e9a392150dcb79626c9db60c4886846c13773e8","modified":1555754613526},{"_id":"themes/huweihuang/layout/_partial/header.ejs","hash":"095d636cb2a154954fbdb767483d0ced9f54e861","modified":1555782407476},{"_id":"themes/huweihuang/layout/_partial/head.ejs","hash":"4840a1b069b44f6239957953f9335ff11c06146a","modified":1555759543697},{"_id":"themes/huweihuang/layout/_partial/nav.ejs","hash":"fd17cd2cc55a42bf7cb9049a4cdba21c213fd3f9","modified":1555668884074},{"_id":"themes/huweihuang/layout/_partial/pagination.ejs","hash":"cd61e4dbbf6020ad094c8e66ec06e8c38ebcd122","modified":1555668884074},{"_id":"themes/huweihuang/layout/_partial/sidebar.ejs","hash":"bc7834dd769eeac94a76ffd9cfbb13a622861b62","modified":1555668884075},{"_id":"themes/huweihuang/layout/_partial/toc.ejs","hash":"aa41fc56f2fa03559aa266fc062772e9e3bbebbf","modified":1555668884080},{"_id":"themes/huweihuang/layout/_widget/category.ejs","hash":"c32e6fb8f3a07c5cbaffcebf93c357237c18b009","modified":1555668884083},{"_id":"themes/huweihuang/layout/_widget/archive.ejs","hash":"ad9fb0073d40fe90bfe3a1e3246e0b07e12b3ecf","modified":1555668884082},{"_id":"themes/huweihuang/layout/_widget/featured-tags.ejs","hash":"e29431fa78c81d7c521bb1f7be356651fcde959c","modified":1555668884084},{"_id":"themes/huweihuang/layout/_widget/friends-blog.ejs","hash":"b185fcffb0d181ddd9eb2259af38cf7d82fb2846","modified":1555668884085},{"_id":"themes/huweihuang/layout/_widget/recent-posts.ejs","hash":"814dd716083a8a75eb31f9d2d6ab28150b01c533","modified":1555668884086},{"_id":"themes/huweihuang/layout/_widget/short-about.ejs","hash":"4a3ec5f4bb03af81c9f8ad71cc3aef0743b5b8d9","modified":1555738502398},{"_id":"themes/huweihuang/source/css/archive.styl","hash":"bcb216ef65804c97b1a5dbe5f519fc171a13aaf1","modified":1555668884098},{"_id":"themes/huweihuang/source/css/beantech.css","hash":"5e9bee0a553da83a3efd4e9bc975a0ebd13b1b7d","modified":1555668884099},{"_id":"themes/huweihuang/source/css/beantech.min.css","hash":"8d7f252f7d03d5fececcef105d16f9ee3f8e5e3b","modified":1555784882302},{"_id":"themes/huweihuang/source/css/donate.css","hash":"948c148076e7e0e0f78225f753813012938f5022","modified":1555668884105},{"_id":"themes/huweihuang/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1555668884107},{"_id":"themes/huweihuang/source/css/highlight.styl","hash":"831f8195f3577ba5bea374f2e24b90054d445055","modified":1555668884106},{"_id":"themes/huweihuang/source/css/rocket.styl","hash":"0abbccdbcd6cce70e8a0bab7152c38adc0b708f1","modified":1555668884110},{"_id":"themes/huweihuang/source/css/signature.styl","hash":"63ae8051f59d5e69544647cc4173eabc81d99aae","modified":1555668884110},{"_id":"themes/huweihuang/source/css/toc.styl","hash":"e197d57dc5312b20974193b6991c779e266fadca","modified":1555668884111},{"_id":"themes/huweihuang/source/css/widget.styl","hash":"f996466e299c68274145ba5afaca9b6d1dd83114","modified":1555668884112},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1555668884113},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1555668884117},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1555668884118},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1555668884122},{"_id":"themes/huweihuang/source/js/bootstrap.min.js","hash":"313da686ebbe387064f2d1899c64ea562b81eb40","modified":1555668884126},{"_id":"themes/huweihuang/source/js/hux-blog.js","hash":"3d3c93e42a9990b2a2e6df5a08e9816f9a221e0f","modified":1555668884126},{"_id":"themes/huweihuang/source/js/hux-blog.min.js","hash":"ee99af17a1a69ac8d85a695fed0349ba202789ae","modified":1555668884127},{"_id":"themes/huweihuang/source/js/jquery.nav.js","hash":"bc6383fa2aa8f437978cf044a3b6f10a65114398","modified":1555668884133},{"_id":"themes/huweihuang/source/js/jquery.tagcloud.js","hash":"448017ff32f75f444ed7985d10a21b3ad92ab100","modified":1555668884134},{"_id":"themes/huweihuang/source/js/smoothscroll.js","hash":"6c2e05bb8782c2f04c02151f60ad45a065595115","modified":1555668884135},{"_id":"themes/huweihuang/source/js/totop.js","hash":"f796b09b4f6177c3674a8c1542a8c92e8590cb5c","modified":1555668884137},{"_id":"themes/huweihuang/source/js/toc.js","hash":"4ffe95b7755b035ee1b41664fa72b0ebea29c3f8","modified":1555668884136},{"_id":"themes/huweihuang/source/image/beian.png","hash":"e8a9b658667041bc3c2c337337c90996eecf460d","modified":1540807241000},{"_id":"source/img/header_img/about.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1555668884001},{"_id":"themes/huweihuang/source/css/bootstrap.min.css","hash":"1818a346630e7133a1f194669f613f613fcfa97c","modified":1555668884104},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.svg","hash":"4dcf0ab896f5417047f881de91bad10dcbda48c6","modified":1555668884115},{"_id":"themes/huweihuang/source/js/bootstrap.js","hash":"5d69034fb6eded2e5961ea54dd47129a88cd5182","modified":1555668884124},{"_id":"themes/huweihuang/source/js/jquery.min.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1555668884132},{"_id":"source/img/header_img/archives-widget.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1555668884005},{"_id":"source/img/header_img/archive.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1555668884004},{"_id":"source/img/upload/wechat-qcode.jpg","hash":"29476a5e23bdae92f4752fe4d0c0fe027ee1dbd0","modified":1546487798000},{"_id":"themes/huweihuang/source/css/bootstrap.css","hash":"d1a24afac31222d70b4e001e0361ef045aa42043","modified":1555668884102},{"_id":"themes/huweihuang/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1555668884108},{"_id":"themes/huweihuang/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1555668884108},{"_id":"source/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1555668884055},{"_id":"source/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1555668884051},{"_id":"source/img/upload/alipay.jpg","hash":"87e6be1bf8ab63fe83a85cac0554fc6002ff94e2","modified":1546487798000},{"_id":"themes/huweihuang/source/js/jquery.js","hash":"4bb763dc96da604aed08ac024a1a3f5de73eea39","modified":1555668884130},{"_id":"source/img/avatar/ironman.png","hash":"7d6a06b4b544ab146c3b3e8474edc33f14ac6e4d","modified":1555668883987},{"_id":"source/img/article_header/article_bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1555668883973},{"_id":"source/img/article/huweihuang_blog.png","hash":"392cf8b33be6c752dd908e027fa3346a6ecd58ab","modified":1555668883970},{"_id":"source/img/blog.jpg","hash":"a76af0b98dbe92ca2d21babcef13f094e409554b","modified":1555981751199},{"_id":"source/img/header_img/home.jpg","hash":"8f1c440427a4aa86b623503a926c027e2e10cd66","modified":1555668884021},{"_id":"source/img/header_img/tag.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1555668884046},{"_id":"source/_posts/hexo-theme-huweihuang/Demo.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1555985798888},{"_id":"source/_posts/kubenetes_concept/Demo.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1555799752314},{"_id":"source/img/article_header/article_header.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1555668883984},{"_id":"source/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1555668884016},{"_id":"source/img/header_img/home2.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1555668884036},{"_id":"source/img/header_img/404.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1555668883999}],"Category":[{"name":"kubernetes","_id":"cjut5v0ip000468p6g7f0net2"}],"Data":[{"_id":"recommended_posts","data":{"http://www.hanyajun.com/kubernetes/kubernetes_architecture/":[{"title":"kubernetes从入门到放弃--k8s基本概念","permalink":"http://www.hanyajun.com/kubernetes/kubenetes_concept/"}],"http://www.hanyajun.com/kubernetes/kubenetes_concept/":[{"title":"kubernetes从入门到放弃--k8s基本架构","permalink":"http://www.hanyajun.com/kubernetes/kubernetes_architecture/"}],"http://www.hanyajun.com/life/rain_worry/":[{"title":"[随笔] 胡思乱想","permalink":"http://www.huweihuang.com/article/essay/random-thinking/"},{"title":"[随笔] 总得写点什么","permalink":"http://www.huweihuang.com/article/essay/something-has-to-be-written/"},{"title":"[随笔] 坐井观天","permalink":"http://www.huweihuang.com/article/essay/sky-and-well/"}]}}],"Page":[{"layout":"404","description":"你来到了没有知识的荒原","header-img":"http://cdn.hanyajun.com/404.png","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原\"\nheader-img: \"http://cdn.hanyajun.com/404.png\"\n---\n","date":"2019-04-20T16:50:11.556Z","updated":"2019-04-20T16:50:11.556Z","path":"404.html","title":"","comments":1,"_id":"cjut5v0hr000068p6t7zmc4gq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"recommended_posts":{"http://www.hanyajun.com/kubernetes/kubernetes_architecture/":[{"title":"kubernetes从入门到放弃--k8s基本概念","permalink":"http://www.hanyajun.com/kubernetes/kubenetes_concept/"}],"http://www.hanyajun.com/kubernetes/kubenetes_concept/":[{"title":"kubernetes从入门到放弃--k8s基本架构","permalink":"http://www.hanyajun.com/kubernetes/kubernetes_architecture/"}],"http://www.hanyajun.com/life/rain_worry/":[{"title":"[随笔] 胡思乱想","permalink":"http://www.huweihuang.com/article/essay/random-thinking/"},{"title":"[随笔] 总得写点什么","permalink":"http://www.huweihuang.com/article/essay/something-has-to-be-written/"},{"title":"[随笔] 坐井观天","permalink":"http://www.huweihuang.com/article/essay/sky-and-well/"}]}}},"excerpt":"","more":""},{"layout":"about","title":"About","description":"走在成为极客的路上","header-img":"http://cdn.hanyajun.com/about.jpg","aplayer":true,"fixed":false,"date":"2019-04-20T02:48:33.000Z","_content":"### 一句话\n\n> 今天做别人不愿意做的，明天做别人不能做的！\n\n### 关于我\n\n> 一个成长期的程序猿\n\n> 2017毕业于武汉科技大学\n\n> 先后就职于sf-tech,xiaomi\n\n> 现在修炼中......\n\n### 兴趣方向\n> go/python。\n\n> 容器云（Docker、Kubernetes等）相关生态技术研究。\n\n> 书法、象棋、钓鱼，偶尔也玩下吃鸡\n\n### 参与社区\n\n > CSDN博客:https://blog.csdn.net/hanyajun0123\n >\n > Github:https://github.com/Han-Ya-Jun\n >\n > 阿里云栖社区:https://yq.aliyun.com/u/hanyajun\n >\n > 简书:https://www.jianshu.com/u/6540eee00b34\n\n### 联系我\n\n>Email: hanyajun5876@163.com\n\n### 微信公众号\n![image](http://cdn.hanyajun.com/wechat.jpg)","source":"about/index.md","raw":"layout: about\ntitle: About\ndescription: 走在成为极客的路上\nheader-img: 'http://cdn.hanyajun.com/about.jpg'\naplayer: true\nfixed: false\ndate: 2019-04-20 10:48:33\n---\n### 一句话\n\n> 今天做别人不愿意做的，明天做别人不能做的！\n\n### 关于我\n\n> 一个成长期的程序猿\n\n> 2017毕业于武汉科技大学\n\n> 先后就职于sf-tech,xiaomi\n\n> 现在修炼中......\n\n### 兴趣方向\n> go/python。\n\n> 容器云（Docker、Kubernetes等）相关生态技术研究。\n\n> 书法、象棋、钓鱼，偶尔也玩下吃鸡\n\n### 参与社区\n\n > CSDN博客:https://blog.csdn.net/hanyajun0123\n >\n > Github:https://github.com/Han-Ya-Jun\n >\n > 阿里云栖社区:https://yq.aliyun.com/u/hanyajun\n >\n > 简书:https://www.jianshu.com/u/6540eee00b34\n\n### 联系我\n\n>Email: hanyajun5876@163.com\n\n### 微信公众号\n![image](http://cdn.hanyajun.com/wechat.jpg)","updated":"2019-04-21T00:12:02.115Z","path":"about/index.html","comments":1,"_id":"cjut5v0ii000168p6p8ol25o9","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"一句话\">一句话</h3>\n<blockquote>\n<p>今天做别人不愿意做的，明天做别人不能做的！</p>\n</blockquote>\n<h3 id=\"关于我\">关于我</h3>\n<blockquote>\n<p>一个成长期的程序猿</p>\n</blockquote>\n<blockquote>\n<p>2017毕业于武汉科技大学</p>\n</blockquote>\n<blockquote>\n<p>先后就职于sf-tech,xiaomi</p>\n</blockquote>\n<blockquote>\n<p>现在修炼中…</p>\n</blockquote>\n<h3 id=\"兴趣方向\">兴趣方向</h3>\n<blockquote>\n<p>go/python。</p>\n</blockquote>\n<blockquote>\n<p>容器云（Docker、Kubernetes等）相关生态技术研究。</p>\n</blockquote>\n<blockquote>\n<p>书法、象棋、钓鱼，偶尔也玩下吃鸡</p>\n</blockquote>\n<h3 id=\"参与社区\">参与社区</h3>\n<blockquote>\n<p>CSDN博客:<a href=\"https://blog.csdn.net/hanyajun0123\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/hanyajun0123</a></p>\n<p>Github:<a href=\"https://github.com/Han-Ya-Jun\" target=\"_blank\" rel=\"noopener\">https://github.com/Han-Ya-Jun</a></p>\n<p>阿里云栖社区:<a href=\"https://yq.aliyun.com/u/hanyajun\" target=\"_blank\" rel=\"noopener\">https://yq.aliyun.com/u/hanyajun</a></p>\n<p>简书:<a href=\"https://www.jianshu.com/u/6540eee00b34\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/u/6540eee00b34</a></p>\n</blockquote>\n<h3 id=\"联系我\">联系我</h3>\n<blockquote>\n<p>Email: <a href=\"mailto:hanyajun5876@163.com\" target=\"_blank\" rel=\"noopener\">hanyajun5876@163.com</a></p>\n</blockquote>\n<h3 id=\"微信公众号\">微信公众号</h3>\n<p><img src=\"http://cdn.hanyajun.com/wechat.jpg\" alt=\"image\"></p>\n","site":{"data":{"recommended_posts":{"http://www.hanyajun.com/kubernetes/kubernetes_architecture/":[{"title":"kubernetes从入门到放弃--k8s基本概念","permalink":"http://www.hanyajun.com/kubernetes/kubenetes_concept/"}],"http://www.hanyajun.com/kubernetes/kubenetes_concept/":[{"title":"kubernetes从入门到放弃--k8s基本架构","permalink":"http://www.hanyajun.com/kubernetes/kubernetes_architecture/"}],"http://www.hanyajun.com/life/rain_worry/":[{"title":"[随笔] 胡思乱想","permalink":"http://www.huweihuang.com/article/essay/random-thinking/"},{"title":"[随笔] 总得写点什么","permalink":"http://www.huweihuang.com/article/essay/something-has-to-be-written/"},{"title":"[随笔] 坐井观天","permalink":"http://www.huweihuang.com/article/essay/sky-and-well/"}]}}},"excerpt":"","more":"<h3>一句话</h3>\n<blockquote>\n<p>今天做别人不愿意做的，明天做别人不能做的！</p>\n</blockquote>\n<h3>关于我</h3>\n<blockquote>\n<p>一个成长期的程序猿</p>\n</blockquote>\n<blockquote>\n<p>2017毕业于武汉科技大学</p>\n</blockquote>\n<blockquote>\n<p>先后就职于sf-tech,xiaomi</p>\n</blockquote>\n<blockquote>\n<p>现在修炼中…</p>\n</blockquote>\n<h3>兴趣方向</h3>\n<blockquote>\n<p>go/python。</p>\n</blockquote>\n<blockquote>\n<p>容器云（Docker、Kubernetes等）相关生态技术研究。</p>\n</blockquote>\n<blockquote>\n<p>书法、象棋、钓鱼，偶尔也玩下吃鸡</p>\n</blockquote>\n<h3>参与社区</h3>\n<blockquote>\n<p>CSDN博客:<a href=\"https://blog.csdn.net/hanyajun0123\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/hanyajun0123</a></p>\n<p>Github:<a href=\"https://github.com/Han-Ya-Jun\" target=\"_blank\" rel=\"noopener\">https://github.com/Han-Ya-Jun</a></p>\n<p>阿里云栖社区:<a href=\"https://yq.aliyun.com/u/hanyajun\" target=\"_blank\" rel=\"noopener\">https://yq.aliyun.com/u/hanyajun</a></p>\n<p>简书:<a href=\"https://www.jianshu.com/u/6540eee00b34\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/u/6540eee00b34</a></p>\n</blockquote>\n<h3>联系我</h3>\n<blockquote>\n<p>Email: <a href=\"mailto:hanyajun5876@163.com\" target=\"_blank\" rel=\"noopener\">hanyajun5876@163.com</a></p>\n</blockquote>\n<h3>微信公众号</h3>\n<p><img src=\"http://cdn.hanyajun.com/wechat.jpg\" alt=\"image\"></p>\n"},{"layout":"archive","title":"Archives","header-img":"http://cdn.hanyajun.com/archive.jpg","comments":0,"date":"2017-09-20T12:49:56.000Z","description":"Hey, this is archives","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archives\"\nheader-img: \"http://cdn.hanyajun.com/archive.jpg\"\ncomments: false\ndate: 2017-09-20 20:49:56\ndescription: \"Hey, this is archives\"\n---\n","updated":"2019-04-20T16:50:11.599Z","path":"archive/index.html","_id":"cjut5v0jb000f68p6by07le9q","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"recommended_posts":{"http://www.hanyajun.com/kubernetes/kubernetes_architecture/":[{"title":"kubernetes从入门到放弃--k8s基本概念","permalink":"http://www.hanyajun.com/kubernetes/kubenetes_concept/"}],"http://www.hanyajun.com/kubernetes/kubenetes_concept/":[{"title":"kubernetes从入门到放弃--k8s基本架构","permalink":"http://www.hanyajun.com/kubernetes/kubernetes_architecture/"}],"http://www.hanyajun.com/life/rain_worry/":[{"title":"[随笔] 胡思乱想","permalink":"http://www.huweihuang.com/article/essay/random-thinking/"},{"title":"[随笔] 总得写点什么","permalink":"http://www.huweihuang.com/article/essay/something-has-to-be-written/"},{"title":"[随笔] 坐井观天","permalink":"http://www.huweihuang.com/article/essay/sky-and-well/"}]}}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"http://cdn.hanyajun.com/tag.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"http://cdn.hanyajun.com/tag.png\"\n---\n","date":"2019-04-20T16:36:39.070Z","updated":"2019-04-20T16:36:39.070Z","path":"tags/index.html","comments":1,"_id":"cjut5v0jc000g68p6b0ph7eey","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{"recommended_posts":{"http://www.hanyajun.com/kubernetes/kubernetes_architecture/":[{"title":"kubernetes从入门到放弃--k8s基本概念","permalink":"http://www.hanyajun.com/kubernetes/kubenetes_concept/"}],"http://www.hanyajun.com/kubernetes/kubenetes_concept/":[{"title":"kubernetes从入门到放弃--k8s基本架构","permalink":"http://www.hanyajun.com/kubernetes/kubernetes_architecture/"}],"http://www.hanyajun.com/life/rain_worry/":[{"title":"[随笔] 胡思乱想","permalink":"http://www.huweihuang.com/article/essay/random-thinking/"},{"title":"[随笔] 总得写点什么","permalink":"http://www.huweihuang.com/article/essay/something-has-to-be-written/"},{"title":"[随笔] 坐井观天","permalink":"http://www.huweihuang.com/article/essay/sky-and-well/"}]}}},"excerpt":"","more":""}],"Post":[{"title":"kubernetes从入门到放弃--k8s基本概念","catalog":true,"toc_nav_num":true,"subtitle":"kubernetes基本概念","header-img":"http://cdn.hanyajun.com/article_header.png","author":"韩亚军","date":"2019-04-18T02:51:00.000Z","_content":"#### kubernetes架构图\n\n下图为kubernetes的master架构图\n![image](https://jimmysong.io/kubernetes-handbook/images/kubernetes-high-level-component-archtecture.jpg)\n### 1. **Cluster**   \ncluster是计算、存储和网络资源的集合，kubernetes利用这些资源运行各种基于容器的应用。\n### 2. **Master**  \nMaster 是Cluster的大脑，它的主要职能就是负责调度，决定应用放在哪里运行。master运行linux操作系统，可以是物理机或者虚拟机。为了实现高可用，可以运行多个Master。\n### 3. Node\nNode 的职责是运行容器应用。Node由Master管理，Node负责监控并汇报容器的状态，同时根据Master的要求管理容器的生命周期。Node运行在linux系统上，可以是物理机或者虚拟机。\n### 4. Pod\nPod是kubernetes的最小工作单元。每个pod可以包含一个或者多个容器。Pod中的容器会作为一个整体被Master调度到一个Node上运行。kubernetes 以**Pod**为最小单位进行调度、扩展、共享资源、管理生命周期；pod中的所有容器都共享一个网络namespace，所有的容器可以共享存储。\n- pod有两种使用方式：\n1. 运行单一容器：<br>\n   one-container-per-Pod 是kubernetes最常见的模型，这种情况下，只是将单个容器简单封装成pod。即使只有一个容器，kubernetes管理的也是pod而不是直接管理容器。\n2. 运行多个容器:<br>\n   运行在同一个pod的的多个容器必须联系紧密，而且直接共享资源。\n\n### 5. Controller\n kubernetes通常不会直接去创建pod，而是通过Controller去管理pod的，Controller中定义了Pod的部署特性，比如有几个副本、什么样的Node上运行等。为了满足不同的业务场景，kubernetes提供了多种Controller，包括Deployment、ReplicaSet、DeamonSet、StatefuleSet、Job等，我们逐一讨论。\n\n- Deployment :是最常用的的Controller，deployment可以管理pod的多个副本，并确保pod按照预期的状态来运行。\n- ReplicaSet : 实现了pod的多副本管理。使用Deployment时会自动创建Replicaset。\n- DeamonSet: 用于每个Node最多只能运行一个Pod副本的场景。\n- StatefuleSet:能够保证Pod的每个副本在整个生命周期中名称是不变的，而其它Controller是提供这个功能。当某个Pod发生故障需要删除并且重新启动时，Pod的名称会发生变化，同时StatefuleSet会保证副本按照固定的顺序启动、更新或者删除。\n- Job 用于运行就删除的应用，而其他Controller　中的ｐｏｄ通常是持续运行的。\n\n### 6. Service\nDeployment 可以部署多个副本，每个Pod都有自己的Ip，那么外界如何访问这些副本呢？Kubernetes Service 定义了外界访问一组特定Pod的方式。Service 有自己的IP和端口，Service为pod提供了负载均衡。K8s运行容器Pod与访问容器Pod这两项任务分别由Controller和Service执行。\n### 7. Namespace\n 如果有多个用户或者项目组共同使用k8s 集群，如果将他们创建的Pod等资源分开呢，就是通过Namespace进行隔离。\n","source":"_posts/kubenetes_concept.md","raw":"title: kubernetes从入门到放弃--k8s基本概念\ncatalog: true\ntoc_nav_num: true\nsubtitle: kubernetes基本概念\nheader-img: 'http://cdn.hanyajun.com/article_header.png'\ntags:\n  - kubernetes\n  - ''\ncategories:\n  - kubernetes\n  - ''\nauthor: 韩亚军\ndate: 2019-04-18 10:51:00\n---\n#### kubernetes架构图\n\n下图为kubernetes的master架构图\n![image](https://jimmysong.io/kubernetes-handbook/images/kubernetes-high-level-component-archtecture.jpg)\n### 1. **Cluster**   \ncluster是计算、存储和网络资源的集合，kubernetes利用这些资源运行各种基于容器的应用。\n### 2. **Master**  \nMaster 是Cluster的大脑，它的主要职能就是负责调度，决定应用放在哪里运行。master运行linux操作系统，可以是物理机或者虚拟机。为了实现高可用，可以运行多个Master。\n### 3. Node\nNode 的职责是运行容器应用。Node由Master管理，Node负责监控并汇报容器的状态，同时根据Master的要求管理容器的生命周期。Node运行在linux系统上，可以是物理机或者虚拟机。\n### 4. Pod\nPod是kubernetes的最小工作单元。每个pod可以包含一个或者多个容器。Pod中的容器会作为一个整体被Master调度到一个Node上运行。kubernetes 以**Pod**为最小单位进行调度、扩展、共享资源、管理生命周期；pod中的所有容器都共享一个网络namespace，所有的容器可以共享存储。\n- pod有两种使用方式：\n1. 运行单一容器：<br>\n   one-container-per-Pod 是kubernetes最常见的模型，这种情况下，只是将单个容器简单封装成pod。即使只有一个容器，kubernetes管理的也是pod而不是直接管理容器。\n2. 运行多个容器:<br>\n   运行在同一个pod的的多个容器必须联系紧密，而且直接共享资源。\n\n### 5. Controller\n kubernetes通常不会直接去创建pod，而是通过Controller去管理pod的，Controller中定义了Pod的部署特性，比如有几个副本、什么样的Node上运行等。为了满足不同的业务场景，kubernetes提供了多种Controller，包括Deployment、ReplicaSet、DeamonSet、StatefuleSet、Job等，我们逐一讨论。\n\n- Deployment :是最常用的的Controller，deployment可以管理pod的多个副本，并确保pod按照预期的状态来运行。\n- ReplicaSet : 实现了pod的多副本管理。使用Deployment时会自动创建Replicaset。\n- DeamonSet: 用于每个Node最多只能运行一个Pod副本的场景。\n- StatefuleSet:能够保证Pod的每个副本在整个生命周期中名称是不变的，而其它Controller是提供这个功能。当某个Pod发生故障需要删除并且重新启动时，Pod的名称会发生变化，同时StatefuleSet会保证副本按照固定的顺序启动、更新或者删除。\n- Job 用于运行就删除的应用，而其他Controller　中的ｐｏｄ通常是持续运行的。\n\n### 6. Service\nDeployment 可以部署多个副本，每个Pod都有自己的Ip，那么外界如何访问这些副本呢？Kubernetes Service 定义了外界访问一组特定Pod的方式。Service 有自己的IP和端口，Service为pod提供了负载均衡。K8s运行容器Pod与访问容器Pod这两项任务分别由Controller和Service执行。\n### 7. Namespace\n 如果有多个用户或者项目组共同使用k8s 集群，如果将他们创建的Pod等资源分开呢，就是通过Namespace进行隔离。\n","slug":"kubenetes_concept","published":1,"updated":"2019-04-20T22:35:52.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut5v0ij000268p69gez8iv4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h4 id=\"kubernetes架构图\">kubernetes架构图</h4>\n<p>下图为kubernetes的master架构图<br>\n<img src=\"https://jimmysong.io/kubernetes-handbook/images/kubernetes-high-level-component-archtecture.jpg\" alt=\"image\"></p>\n<h3 id=\"1-cluster\">1. <strong>Cluster</strong></h3>\n<p>cluster是计算、存储和网络资源的集合，kubernetes利用这些资源运行各种基于容器的应用。</p>\n<h3 id=\"2-master\">2. <strong>Master</strong></h3>\n<p>Master 是Cluster的大脑，它的主要职能就是负责调度，决定应用放在哪里运行。master运行linux操作系统，可以是物理机或者虚拟机。为了实现高可用，可以运行多个Master。</p>\n<h3 id=\"3-node\">3. Node</h3>\n<p>Node 的职责是运行容器应用。Node由Master管理，Node负责监控并汇报容器的状态，同时根据Master的要求管理容器的生命周期。Node运行在linux系统上，可以是物理机或者虚拟机。</p>\n<h3 id=\"4-pod\">4. Pod</h3>\n<p>Pod是kubernetes的最小工作单元。每个pod可以包含一个或者多个容器。Pod中的容器会作为一个整体被Master调度到一个Node上运行。kubernetes 以<strong>Pod</strong>为最小单位进行调度、扩展、共享资源、管理生命周期；pod中的所有容器都共享一个网络namespace，所有的容器可以共享存储。</p>\n<ul>\n<li>pod有两种使用方式：</li>\n</ul>\n<ol>\n<li>运行单一容器：<br><br>\none-container-per-Pod 是kubernetes最常见的模型，这种情况下，只是将单个容器简单封装成pod。即使只有一个容器，kubernetes管理的也是pod而不是直接管理容器。</li>\n<li>运行多个容器:<br><br>\n运行在同一个pod的的多个容器必须联系紧密，而且直接共享资源。</li>\n</ol>\n<h3 id=\"5-controller\">5. Controller</h3>\n<p>kubernetes通常不会直接去创建pod，而是通过Controller去管理pod的，Controller中定义了Pod的部署特性，比如有几个副本、什么样的Node上运行等。为了满足不同的业务场景，kubernetes提供了多种Controller，包括Deployment、ReplicaSet、DeamonSet、StatefuleSet、Job等，我们逐一讨论。</p>\n<ul>\n<li>Deployment :是最常用的的Controller，deployment可以管理pod的多个副本，并确保pod按照预期的状态来运行。</li>\n<li>ReplicaSet : 实现了pod的多副本管理。使用Deployment时会自动创建Replicaset。</li>\n<li>DeamonSet: 用于每个Node最多只能运行一个Pod副本的场景。</li>\n<li>StatefuleSet:能够保证Pod的每个副本在整个生命周期中名称是不变的，而其它Controller是提供这个功能。当某个Pod发生故障需要删除并且重新启动时，Pod的名称会发生变化，同时StatefuleSet会保证副本按照固定的顺序启动、更新或者删除。</li>\n<li>Job 用于运行就删除的应用，而其他Controller　中的ｐｏｄ通常是持续运行的。</li>\n</ul>\n<h3 id=\"6-service\">6. Service</h3>\n<p>Deployment 可以部署多个副本，每个Pod都有自己的Ip，那么外界如何访问这些副本呢？Kubernetes Service 定义了外界访问一组特定Pod的方式。Service 有自己的IP和端口，Service为pod提供了负载均衡。K8s运行容器Pod与访问容器Pod这两项任务分别由Controller和Service执行。</p>\n<h3 id=\"7-namespace\">7. Namespace</h3>\n<p>如果有多个用户或者项目组共同使用k8s 集群，如果将他们创建的Pod等资源分开呢，就是通过Namespace进行隔离。</p>\n<div><h2 id=\"推荐文章\">推荐文章<span style=\"font-size:0.45em; color:gray\"></span></h2><ul><li><a href=\"http://www.hanyajun.com/kubernetes/kubernetes_architecture/\">kubernetes从入门到放弃--k8s基本架构</a></li></ul></div>","site":{"data":{"recommended_posts":{"http://www.hanyajun.com/kubernetes/kubernetes_architecture/":[{"title":"kubernetes从入门到放弃--k8s基本概念","permalink":"http://www.hanyajun.com/kubernetes/kubenetes_concept/"}],"http://www.hanyajun.com/kubernetes/kubenetes_concept/":[{"title":"kubernetes从入门到放弃--k8s基本架构","permalink":"http://www.hanyajun.com/kubernetes/kubernetes_architecture/"}],"http://www.hanyajun.com/life/rain_worry/":[{"title":"[随笔] 胡思乱想","permalink":"http://www.huweihuang.com/article/essay/random-thinking/"},{"title":"[随笔] 总得写点什么","permalink":"http://www.huweihuang.com/article/essay/something-has-to-be-written/"},{"title":"[随笔] 坐井观天","permalink":"http://www.huweihuang.com/article/essay/sky-and-well/"}]}}},"excerpt":"","more":"<h4>kubernetes架构图</h4>\n<p>下图为kubernetes的master架构图<br>\n<img src=\"https://jimmysong.io/kubernetes-handbook/images/kubernetes-high-level-component-archtecture.jpg\" alt=\"image\"></p>\n<h3>1. <strong>Cluster</strong></h3>\n<p>cluster是计算、存储和网络资源的集合，kubernetes利用这些资源运行各种基于容器的应用。</p>\n<h3>2. <strong>Master</strong></h3>\n<p>Master 是Cluster的大脑，它的主要职能就是负责调度，决定应用放在哪里运行。master运行linux操作系统，可以是物理机或者虚拟机。为了实现高可用，可以运行多个Master。</p>\n<h3>3. Node</h3>\n<p>Node 的职责是运行容器应用。Node由Master管理，Node负责监控并汇报容器的状态，同时根据Master的要求管理容器的生命周期。Node运行在linux系统上，可以是物理机或者虚拟机。</p>\n<h3>4. Pod</h3>\n<p>Pod是kubernetes的最小工作单元。每个pod可以包含一个或者多个容器。Pod中的容器会作为一个整体被Master调度到一个Node上运行。kubernetes 以<strong>Pod</strong>为最小单位进行调度、扩展、共享资源、管理生命周期；pod中的所有容器都共享一个网络namespace，所有的容器可以共享存储。</p>\n<ul>\n<li>pod有两种使用方式：</li>\n</ul>\n<ol>\n<li>运行单一容器：<br><br>\none-container-per-Pod 是kubernetes最常见的模型，这种情况下，只是将单个容器简单封装成pod。即使只有一个容器，kubernetes管理的也是pod而不是直接管理容器。</li>\n<li>运行多个容器:<br><br>\n运行在同一个pod的的多个容器必须联系紧密，而且直接共享资源。</li>\n</ol>\n<h3>5. Controller</h3>\n<p>kubernetes通常不会直接去创建pod，而是通过Controller去管理pod的，Controller中定义了Pod的部署特性，比如有几个副本、什么样的Node上运行等。为了满足不同的业务场景，kubernetes提供了多种Controller，包括Deployment、ReplicaSet、DeamonSet、StatefuleSet、Job等，我们逐一讨论。</p>\n<ul>\n<li>Deployment :是最常用的的Controller，deployment可以管理pod的多个副本，并确保pod按照预期的状态来运行。</li>\n<li>ReplicaSet : 实现了pod的多副本管理。使用Deployment时会自动创建Replicaset。</li>\n<li>DeamonSet: 用于每个Node最多只能运行一个Pod副本的场景。</li>\n<li>StatefuleSet:能够保证Pod的每个副本在整个生命周期中名称是不变的，而其它Controller是提供这个功能。当某个Pod发生故障需要删除并且重新启动时，Pod的名称会发生变化，同时StatefuleSet会保证副本按照固定的顺序启动、更新或者删除。</li>\n<li>Job 用于运行就删除的应用，而其他Controller　中的ｐｏｄ通常是持续运行的。</li>\n</ul>\n<h3>6. Service</h3>\n<p>Deployment 可以部署多个副本，每个Pod都有自己的Ip，那么外界如何访问这些副本呢？Kubernetes Service 定义了外界访问一组特定Pod的方式。Service 有自己的IP和端口，Service为pod提供了负载均衡。K8s运行容器Pod与访问容器Pod这两项任务分别由Controller和Service执行。</p>\n<h3>7. Namespace</h3>\n<p>如果有多个用户或者项目组共同使用k8s 集群，如果将他们创建的Pod等资源分开呢，就是通过Namespace进行隔离。</p>\n"},{"title":"kubernetes从入门到放弃--k8s基本架构","catalog":true,"toc_nav_num":true,"subtitle":"kubernetes基本架构","header-img":"http://cdn.hanyajun.com/article_header.png","author":"韩亚军","top":9,"date":"2019-04-20T15:15:00.000Z","_content":"### kubernetes总架构图 \n![image](http://cdn.hanyajun.com/k8s-arch.jpg)\n### kubernetes 各组件介绍\n#### Master 节点\nMaster是kubernetes的大脑，运行的Deamon 服务包括kube-apiserver、kube-scheduler、kube-contronller-\n\nmanager、etcd和pod网络\n\n![image](http://cdn.hanyajun.com/k8s_master.jpeg)\n##### 各组件介绍\n- **API Server**（kube-apiserver）</br> \n\n  API Server提供HTTP/HTTPS RESTful API，即Kubernetes API。API Server是Kubernetes　Cluster的前端接\n\n  口，各种客户端工具（CLI或UI）以及Kubernetes其他组件可以通过它管理Cluster的各种资源。\n- **Scheduler**（kube-scheduler） </br> \n  \n  Scheduler负责决定将Pod放在哪个Node上运行。Scheduler在调度时会充分考虑Cluster的拓扑结构，当前各个\n\n  节点的负载，以及应用对高可用、性能、数据亲和性的需求。\n- **Controller Manager**（kube-controller-manager） </br> \n\n  Controller Manager负责管理Cluster各种资源，保证资源处于预期的状态。Controller Manager由多种Controller\n  \n  组成，包括replication controller、endpoint controller、namespace controller、serviceaccounts controller等。 \n  \n  不同的controller管理不同的资源。例如，replication controller管理Deployment、StatefulSet、DaemonSet的生\n  \n  命周期，namespace controller管理Namespace资源。\n- **etcd** </br> \n\n  etcd负责保存Kubernetes Cluster的配置信息和各种资源的状态信息。当数据发生变化时，etcd会快速通知\n  \n  Kubernetes相关组件。\n- **Pod网络** </br> \n\n  Pod要能够相同通信，Kubernetes Cluster必须部署Pod网络，flannel是其中一个可选方案。\n\n##### master工作流程图\n![image](http://cdn.hanyajun.com/k8s_master_workflow.png)\n1. Kubecfg将特定的请求，比如创建Pod，发送给Kubernetes Client。\n\n1. Kubernetes Client将请求发送给API server。\n\n1. API Server根据请求的类型，比如创建Pod时storage类型是pods，然后依此选择何种REST Storage API对请求作出处理。\n\n1. REST Storage API对的请求作相应的处理。\n1. 将处理的结果存入高可用键值存储系统Etcd中。\n1. 在API Server响应Kubecfg的请求后，Scheduler会根据Kubernetes Client获取集群中运行Pod及Minion/Node信息。\n1. 依据从Kubernetes Client获取的信息，Scheduler将未分发的Pod分发到可用的Minion/Node节点上。\n\n#### Node节点\nNode节点属于工作节点,是pod运行的地方。\n\n![image](http://cdn.hanyajun.com/k8s_node.jpg)\n\n##### 各组件介绍\n1. **kubelet**　<br>\n\n   node的agent，当scheduler去确定在某个node上运行pod后，会将pod的具体配置信息发送给该节点的\n   \n   kubelet， kubelet会根据遮羞信息创建和运行容器，并向master报告运行状态。\n\n2. **kube-proxy** <br>\n\n    每个node都会运行kube-proxy服务，外界通过service访问pod，kube-proxy负责将降访问service的TCP/UDP数\n    \n    据流转发到后端的容器。如果有多个副本，kube-proxy会实现负载均衡。\n\n 3. **pod网络**  <br>\n\n    pod能能够互相通信，k8s集群必须部署pod网络，flannel是其中一个可以选择的方案\n##### kubectl 架构解读\n![image](http://cdn.hanyajun.com/kubelet.png)\n\n###### Kubelet[节点上的Pod管家]\n负责Node节点上pod的创建、修改、监控、删除等全生命周期的管理\n定时上报本Node的状态信息给API Server。\n\nkubelet是Master API Server和Minion/Node之间的桥梁，接收Master API Server分配给它的commands和work，\n\n通过kube-apiserver间接与Etcd集群交互，读取配置信息。\n具体的工作如下：\n1. 设置容器的环境变量、给容器绑定Volume、给容器绑定Port、根据指定的Pod运行一个单一容器、给指定的Pod创建network 容器。\n\n1. 同步Pod的状态、同步Pod的状态、从cAdvisor获取container info、 pod info、 root info、 machine info。\n1. 在容器中运行命令、杀死容器、删除Pod的所有容器。\n\n参考链接：https://yq.aliyun.com/articles/47308?spm=5176.100240.searchblog.19.jF7FFa","source":"_posts/kubernetes_architecture.md","raw":"title: kubernetes从入门到放弃--k8s基本架构\ncatalog: true\ntoc_nav_num: true\nsubtitle: kubernetes基本架构\nheader-img: 'http://cdn.hanyajun.com/article_header.png'\nauthor: 韩亚军\ntop: 9\ntags:\n  - kubernetes\ncategories:\n  - kubernetes\n  - ''\ndate: 2019-04-20 23:15:00\n---\n### kubernetes总架构图 \n![image](http://cdn.hanyajun.com/k8s-arch.jpg)\n### kubernetes 各组件介绍\n#### Master 节点\nMaster是kubernetes的大脑，运行的Deamon 服务包括kube-apiserver、kube-scheduler、kube-contronller-\n\nmanager、etcd和pod网络\n\n![image](http://cdn.hanyajun.com/k8s_master.jpeg)\n##### 各组件介绍\n- **API Server**（kube-apiserver）</br> \n\n  API Server提供HTTP/HTTPS RESTful API，即Kubernetes API。API Server是Kubernetes　Cluster的前端接\n\n  口，各种客户端工具（CLI或UI）以及Kubernetes其他组件可以通过它管理Cluster的各种资源。\n- **Scheduler**（kube-scheduler） </br> \n  \n  Scheduler负责决定将Pod放在哪个Node上运行。Scheduler在调度时会充分考虑Cluster的拓扑结构，当前各个\n\n  节点的负载，以及应用对高可用、性能、数据亲和性的需求。\n- **Controller Manager**（kube-controller-manager） </br> \n\n  Controller Manager负责管理Cluster各种资源，保证资源处于预期的状态。Controller Manager由多种Controller\n  \n  组成，包括replication controller、endpoint controller、namespace controller、serviceaccounts controller等。 \n  \n  不同的controller管理不同的资源。例如，replication controller管理Deployment、StatefulSet、DaemonSet的生\n  \n  命周期，namespace controller管理Namespace资源。\n- **etcd** </br> \n\n  etcd负责保存Kubernetes Cluster的配置信息和各种资源的状态信息。当数据发生变化时，etcd会快速通知\n  \n  Kubernetes相关组件。\n- **Pod网络** </br> \n\n  Pod要能够相同通信，Kubernetes Cluster必须部署Pod网络，flannel是其中一个可选方案。\n\n##### master工作流程图\n![image](http://cdn.hanyajun.com/k8s_master_workflow.png)\n1. Kubecfg将特定的请求，比如创建Pod，发送给Kubernetes Client。\n\n1. Kubernetes Client将请求发送给API server。\n\n1. API Server根据请求的类型，比如创建Pod时storage类型是pods，然后依此选择何种REST Storage API对请求作出处理。\n\n1. REST Storage API对的请求作相应的处理。\n1. 将处理的结果存入高可用键值存储系统Etcd中。\n1. 在API Server响应Kubecfg的请求后，Scheduler会根据Kubernetes Client获取集群中运行Pod及Minion/Node信息。\n1. 依据从Kubernetes Client获取的信息，Scheduler将未分发的Pod分发到可用的Minion/Node节点上。\n\n#### Node节点\nNode节点属于工作节点,是pod运行的地方。\n\n![image](http://cdn.hanyajun.com/k8s_node.jpg)\n\n##### 各组件介绍\n1. **kubelet**　<br>\n\n   node的agent，当scheduler去确定在某个node上运行pod后，会将pod的具体配置信息发送给该节点的\n   \n   kubelet， kubelet会根据遮羞信息创建和运行容器，并向master报告运行状态。\n\n2. **kube-proxy** <br>\n\n    每个node都会运行kube-proxy服务，外界通过service访问pod，kube-proxy负责将降访问service的TCP/UDP数\n    \n    据流转发到后端的容器。如果有多个副本，kube-proxy会实现负载均衡。\n\n 3. **pod网络**  <br>\n\n    pod能能够互相通信，k8s集群必须部署pod网络，flannel是其中一个可以选择的方案\n##### kubectl 架构解读\n![image](http://cdn.hanyajun.com/kubelet.png)\n\n###### Kubelet[节点上的Pod管家]\n负责Node节点上pod的创建、修改、监控、删除等全生命周期的管理\n定时上报本Node的状态信息给API Server。\n\nkubelet是Master API Server和Minion/Node之间的桥梁，接收Master API Server分配给它的commands和work，\n\n通过kube-apiserver间接与Etcd集群交互，读取配置信息。\n具体的工作如下：\n1. 设置容器的环境变量、给容器绑定Volume、给容器绑定Port、根据指定的Pod运行一个单一容器、给指定的Pod创建network 容器。\n\n1. 同步Pod的状态、同步Pod的状态、从cAdvisor获取container info、 pod info、 root info、 machine info。\n1. 在容器中运行命令、杀死容器、删除Pod的所有容器。\n\n参考链接：https://yq.aliyun.com/articles/47308?spm=5176.100240.searchblog.19.jF7FFa","slug":"kubernetes_architecture","published":1,"updated":"2019-04-20T22:35:11.091Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut5v0in000368p6gl2tej7u","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"kubernetes总架构图\">kubernetes总架构图</h3>\n<p><img src=\"http://cdn.hanyajun.com/k8s-arch.jpg\" alt=\"image\"></p>\n<h3 id=\"kubernetes-各组件介绍\">kubernetes 各组件介绍</h3>\n<h4 id=\"master-节点\">Master 节点</h4>\n<p>Master是kubernetes的大脑，运行的Deamon 服务包括kube-apiserver、kube-scheduler、kube-contronller-</p>\n<p>manager、etcd和pod网络</p>\n<p><img src=\"http://cdn.hanyajun.com/k8s_master.jpeg\" alt=\"image\"></p>\n<h5 id=\"各组件介绍\">各组件介绍</h5>\n<ul>\n<li>\n<p><strong>API Server</strong>（kube-apiserver）<br></p>\n<p>API Server提供HTTP/HTTPS RESTful API，即Kubernetes API。API Server是Kubernetes　Cluster的前端接</p>\n<p>口，各种客户端工具（CLI或UI）以及Kubernetes其他组件可以通过它管理Cluster的各种资源。</p>\n</li>\n<li>\n<p><strong>Scheduler</strong>（kube-scheduler） <br></p>\n<p>Scheduler负责决定将Pod放在哪个Node上运行。Scheduler在调度时会充分考虑Cluster的拓扑结构，当前各个</p>\n<p>节点的负载，以及应用对高可用、性能、数据亲和性的需求。</p>\n</li>\n<li>\n<p><strong>Controller Manager</strong>（kube-controller-manager） <br></p>\n<p>Controller Manager负责管理Cluster各种资源，保证资源处于预期的状态。Controller Manager由多种Controller</p>\n<p>组成，包括replication controller、endpoint controller、namespace controller、serviceaccounts controller等。</p>\n<p>不同的controller管理不同的资源。例如，replication controller管理Deployment、StatefulSet、DaemonSet的生</p>\n<p>命周期，namespace controller管理Namespace资源。</p>\n</li>\n<li>\n<p><strong>etcd</strong> <br></p>\n<p>etcd负责保存Kubernetes Cluster的配置信息和各种资源的状态信息。当数据发生变化时，etcd会快速通知</p>\n<p>Kubernetes相关组件。</p>\n</li>\n<li>\n<p><strong>Pod网络</strong> <br></p>\n<p>Pod要能够相同通信，Kubernetes Cluster必须部署Pod网络，flannel是其中一个可选方案。</p>\n</li>\n</ul>\n<h5 id=\"master工作流程图\">master工作流程图</h5>\n<p><img src=\"http://cdn.hanyajun.com/k8s_master_workflow.png\" alt=\"image\"></p>\n<ol>\n<li>\n<p>Kubecfg将特定的请求，比如创建Pod，发送给Kubernetes Client。</p>\n</li>\n<li>\n<p>Kubernetes Client将请求发送给API server。</p>\n</li>\n<li>\n<p>API Server根据请求的类型，比如创建Pod时storage类型是pods，然后依此选择何种REST Storage API对请求作出处理。</p>\n</li>\n<li>\n<p>REST Storage API对的请求作相应的处理。</p>\n</li>\n<li>\n<p>将处理的结果存入高可用键值存储系统Etcd中。</p>\n</li>\n<li>\n<p>在API Server响应Kubecfg的请求后，Scheduler会根据Kubernetes Client获取集群中运行Pod及Minion/Node信息。</p>\n</li>\n<li>\n<p>依据从Kubernetes Client获取的信息，Scheduler将未分发的Pod分发到可用的Minion/Node节点上。</p>\n</li>\n</ol>\n<h4 id=\"node节点\">Node节点</h4>\n<p>Node节点属于工作节点,是pod运行的地方。</p>\n<p><img src=\"http://cdn.hanyajun.com/k8s_node.jpg\" alt=\"image\"></p>\n<h5 id=\"各组件介绍\">各组件介绍</h5>\n<ol>\n<li>\n<p><strong>kubelet</strong>　<br></p>\n<p>node的agent，当scheduler去确定在某个node上运行pod后，会将pod的具体配置信息发送给该节点的</p>\n<p>kubelet， kubelet会根据遮羞信息创建和运行容器，并向master报告运行状态。</p>\n</li>\n<li>\n<p><strong>kube-proxy</strong> <br></p>\n<p>每个node都会运行kube-proxy服务，外界通过service访问pod，kube-proxy负责将降访问service的TCP/UDP数</p>\n<p>据流转发到后端的容器。如果有多个副本，kube-proxy会实现负载均衡。</p>\n</li>\n<li>\n<p><strong>pod网络</strong>  <br></p>\n<p>pod能能够互相通信，k8s集群必须部署pod网络，flannel是其中一个可以选择的方案</p>\n</li>\n</ol>\n<h5 id=\"kubectl-架构解读\">kubectl 架构解读</h5>\n<p><img src=\"http://cdn.hanyajun.com/kubelet.png\" alt=\"image\"></p>\n<h6 id=\"kubelet节点上的pod管家\">Kubelet[节点上的Pod管家]</h6>\n<p>负责Node节点上pod的创建、修改、监控、删除等全生命周期的管理<br>\n定时上报本Node的状态信息给API Server。</p>\n<p>kubelet是Master API Server和Minion/Node之间的桥梁，接收Master API Server分配给它的commands和work，</p>\n<p>通过kube-apiserver间接与Etcd集群交互，读取配置信息。<br>\n具体的工作如下：</p>\n<ol>\n<li>\n<p>设置容器的环境变量、给容器绑定Volume、给容器绑定Port、根据指定的Pod运行一个单一容器、给指定的Pod创建network 容器。</p>\n</li>\n<li>\n<p>同步Pod的状态、同步Pod的状态、从cAdvisor获取container info、 pod info、 root info、 machine info。</p>\n</li>\n<li>\n<p>在容器中运行命令、杀死容器、删除Pod的所有容器。</p>\n</li>\n</ol>\n<p>参考链接：<a href=\"https://yq.aliyun.com/articles/47308?spm=5176.100240.searchblog.19.jF7FFa\" target=\"_blank\" rel=\"noopener\">https://yq.aliyun.com/articles/47308?spm=5176.100240.searchblog.19.jF7FFa</a></p>\n<div><h2 id=\"推荐文章\">推荐文章<span style=\"font-size:0.45em; color:gray\"></span></h2><ul><li><a href=\"http://www.hanyajun.com/kubernetes/kubenetes_concept/\">kubernetes从入门到放弃--k8s基本概念</a></li></ul></div>","site":{"data":{"recommended_posts":{"http://www.hanyajun.com/kubernetes/kubernetes_architecture/":[{"title":"kubernetes从入门到放弃--k8s基本概念","permalink":"http://www.hanyajun.com/kubernetes/kubenetes_concept/"}],"http://www.hanyajun.com/kubernetes/kubenetes_concept/":[{"title":"kubernetes从入门到放弃--k8s基本架构","permalink":"http://www.hanyajun.com/kubernetes/kubernetes_architecture/"}],"http://www.hanyajun.com/life/rain_worry/":[{"title":"[随笔] 胡思乱想","permalink":"http://www.huweihuang.com/article/essay/random-thinking/"},{"title":"[随笔] 总得写点什么","permalink":"http://www.huweihuang.com/article/essay/something-has-to-be-written/"},{"title":"[随笔] 坐井观天","permalink":"http://www.huweihuang.com/article/essay/sky-and-well/"}]}}},"excerpt":"","more":"<h3>kubernetes总架构图</h3>\n<p><img src=\"http://cdn.hanyajun.com/k8s-arch.jpg\" alt=\"image\"></p>\n<h3>kubernetes 各组件介绍</h3>\n<h4>Master 节点</h4>\n<p>Master是kubernetes的大脑，运行的Deamon 服务包括kube-apiserver、kube-scheduler、kube-contronller-</p>\n<p>manager、etcd和pod网络</p>\n<p><img src=\"http://cdn.hanyajun.com/k8s_master.jpeg\" alt=\"image\"></p>\n<h5>各组件介绍</h5>\n<ul>\n<li>\n<p><strong>API Server</strong>（kube-apiserver）<br></p>\n<p>API Server提供HTTP/HTTPS RESTful API，即Kubernetes API。API Server是Kubernetes　Cluster的前端接</p>\n<p>口，各种客户端工具（CLI或UI）以及Kubernetes其他组件可以通过它管理Cluster的各种资源。</p>\n</li>\n<li>\n<p><strong>Scheduler</strong>（kube-scheduler） <br></p>\n<p>Scheduler负责决定将Pod放在哪个Node上运行。Scheduler在调度时会充分考虑Cluster的拓扑结构，当前各个</p>\n<p>节点的负载，以及应用对高可用、性能、数据亲和性的需求。</p>\n</li>\n<li>\n<p><strong>Controller Manager</strong>（kube-controller-manager） <br></p>\n<p>Controller Manager负责管理Cluster各种资源，保证资源处于预期的状态。Controller Manager由多种Controller</p>\n<p>组成，包括replication controller、endpoint controller、namespace controller、serviceaccounts controller等。</p>\n<p>不同的controller管理不同的资源。例如，replication controller管理Deployment、StatefulSet、DaemonSet的生</p>\n<p>命周期，namespace controller管理Namespace资源。</p>\n</li>\n<li>\n<p><strong>etcd</strong> <br></p>\n<p>etcd负责保存Kubernetes Cluster的配置信息和各种资源的状态信息。当数据发生变化时，etcd会快速通知</p>\n<p>Kubernetes相关组件。</p>\n</li>\n<li>\n<p><strong>Pod网络</strong> <br></p>\n<p>Pod要能够相同通信，Kubernetes Cluster必须部署Pod网络，flannel是其中一个可选方案。</p>\n</li>\n</ul>\n<h5>master工作流程图</h5>\n<p><img src=\"http://cdn.hanyajun.com/k8s_master_workflow.png\" alt=\"image\"></p>\n<ol>\n<li>\n<p>Kubecfg将特定的请求，比如创建Pod，发送给Kubernetes Client。</p>\n</li>\n<li>\n<p>Kubernetes Client将请求发送给API server。</p>\n</li>\n<li>\n<p>API Server根据请求的类型，比如创建Pod时storage类型是pods，然后依此选择何种REST Storage API对请求作出处理。</p>\n</li>\n<li>\n<p>REST Storage API对的请求作相应的处理。</p>\n</li>\n<li>\n<p>将处理的结果存入高可用键值存储系统Etcd中。</p>\n</li>\n<li>\n<p>在API Server响应Kubecfg的请求后，Scheduler会根据Kubernetes Client获取集群中运行Pod及Minion/Node信息。</p>\n</li>\n<li>\n<p>依据从Kubernetes Client获取的信息，Scheduler将未分发的Pod分发到可用的Minion/Node节点上。</p>\n</li>\n</ol>\n<h4>Node节点</h4>\n<p>Node节点属于工作节点,是pod运行的地方。</p>\n<p><img src=\"http://cdn.hanyajun.com/k8s_node.jpg\" alt=\"image\"></p>\n<h5>各组件介绍</h5>\n<ol>\n<li>\n<p><strong>kubelet</strong>　<br></p>\n<p>node的agent，当scheduler去确定在某个node上运行pod后，会将pod的具体配置信息发送给该节点的</p>\n<p>kubelet， kubelet会根据遮羞信息创建和运行容器，并向master报告运行状态。</p>\n</li>\n<li>\n<p><strong>kube-proxy</strong> <br></p>\n<p>每个node都会运行kube-proxy服务，外界通过service访问pod，kube-proxy负责将降访问service的TCP/UDP数</p>\n<p>据流转发到后端的容器。如果有多个副本，kube-proxy会实现负载均衡。</p>\n</li>\n<li>\n<p><strong>pod网络</strong>  <br></p>\n<p>pod能能够互相通信，k8s集群必须部署pod网络，flannel是其中一个可以选择的方案</p>\n</li>\n</ol>\n<h5>kubectl 架构解读</h5>\n<p><img src=\"http://cdn.hanyajun.com/kubelet.png\" alt=\"image\"></p>\n<h6>Kubelet[节点上的Pod管家]</h6>\n<p>负责Node节点上pod的创建、修改、监控、删除等全生命周期的管理<br>\n定时上报本Node的状态信息给API Server。</p>\n<p>kubelet是Master API Server和Minion/Node之间的桥梁，接收Master API Server分配给它的commands和work，</p>\n<p>通过kube-apiserver间接与Etcd集群交互，读取配置信息。<br>\n具体的工作如下：</p>\n<ol>\n<li>\n<p>设置容器的环境变量、给容器绑定Volume、给容器绑定Port、根据指定的Pod运行一个单一容器、给指定的Pod创建network 容器。</p>\n</li>\n<li>\n<p>同步Pod的状态、同步Pod的状态、从cAdvisor获取container info、 pod info、 root info、 machine info。</p>\n</li>\n<li>\n<p>在容器中运行命令、杀死容器、删除Pod的所有容器。</p>\n</li>\n</ol>\n<p>参考链接：<a href=\"https://yq.aliyun.com/articles/47308?spm=5176.100240.searchblog.19.jF7FFa\" target=\"_blank\" rel=\"noopener\">https://yq.aliyun.com/articles/47308?spm=5176.100240.searchblog.19.jF7FFa</a></p>\n"},{"title":"[Hexo] Theme HanYajun","catalog":true,"toc_nav_num":true,"subtitle":"This is hexo theme Demo.","header-img":"/img/article_header/article_header.png","catagories":["Hexo"],"date":"2018-04-18T02:51:00.000Z","_content":"> This HanYajun theme created by [HanYajun](http://www.huweihuang.com/) modified from the original Porter [HuWeihuang](https://github.com/huweihuang/hexo-theme-huweihuang)\n\n# Live Demo\n\nHanYajun Blog : [www.hanyajun.com](http://www.hanyajun.com/)\n\n![Theme HanYajun](http://cdn.hanyajun.com/hanyajun_blog.png)\n\n# Install Hexo\n\nInstall Node.js  and Git\n\n```shell\n#For Mac\nbrew install node\nbrew install git\n```\n\nInstall hexo\n\n```shell\nnpm install hexo-cli -g\n\n#For more:https://hexo.io/zh-cn/index.html\n```\n\n# Theme Usage\n\n## Init\n\n---\n```bash\ngit clone git@github.com:Han-Ya-Jun/hexo-theme-hanyajun.git ./hexo-hanyajun\ncd hexo-huweihuang\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](/img/article/tag.png)\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## Hexo Basics\n---\nSome hexo command:\n```bash\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\nPlease <a class=\"github-button\" href=\"https://github.com/Han-Ya-Jun/hexo-theme-hanyajun\" data-icon=\"octicon-star\" aria-label=\"Star huweihuang/hexo-theme-huweihuang on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/Han-Ya-Jun\" aria-label=\"Follow @hanyajun on GitHub\">Follow</a> would also be appreciated!\nPeace!","source":"_posts/hexo-theme-huweihuang.md","raw":"title: '[Hexo] Theme HanYajun'\ncatalog: true\ntoc_nav_num: true\nsubtitle: This is hexo theme Demo.\nheader-img: /img/article_header/article_header.png\ntags:\n  - Hexo\ncatagories:\n  - Hexo\ncategories: []\ndate: 2018-04-18 10:51:00\n---\n> This HanYajun theme created by [HanYajun](http://www.huweihuang.com/) modified from the original Porter [HuWeihuang](https://github.com/huweihuang/hexo-theme-huweihuang)\n\n# Live Demo\n\nHanYajun Blog : [www.hanyajun.com](http://www.hanyajun.com/)\n\n![Theme HanYajun](http://cdn.hanyajun.com/hanyajun_blog.png)\n\n# Install Hexo\n\nInstall Node.js  and Git\n\n```shell\n#For Mac\nbrew install node\nbrew install git\n```\n\nInstall hexo\n\n```shell\nnpm install hexo-cli -g\n\n#For more:https://hexo.io/zh-cn/index.html\n```\n\n# Theme Usage\n\n## Init\n\n---\n```bash\ngit clone git@github.com:Han-Ya-Jun/hexo-theme-hanyajun.git ./hexo-hanyajun\ncd hexo-huweihuang\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](/img/article/tag.png)\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## Hexo Basics\n---\nSome hexo command:\n```bash\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\nPlease <a class=\"github-button\" href=\"https://github.com/Han-Ya-Jun/hexo-theme-hanyajun\" data-icon=\"octicon-star\" aria-label=\"Star huweihuang/hexo-theme-huweihuang on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/Han-Ya-Jun\" aria-label=\"Follow @hanyajun on GitHub\">Follow</a> would also be appreciated!\nPeace!","slug":"hexo-theme-huweihuang","published":1,"updated":"2019-04-23T02:16:38.792Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjut5v0ir000668p6od56wesb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote>\n<p>This HanYajun theme created by <a href=\"http://www.huweihuang.com/\" target=\"_blank\" rel=\"noopener\">HanYajun</a> modified from the original Porter <a href=\"https://github.com/huweihuang/hexo-theme-huweihuang\" target=\"_blank\" rel=\"noopener\">HuWeihuang</a></p>\n</blockquote>\n<h1 id=\"live-demo\">Live Demo</h1>\n<p>HanYajun Blog : <a href=\"http://www.hanyajun.com/\">www.hanyajun.com</a></p>\n<p><img src=\"http://cdn.hanyajun.com/hanyajun_blog.png\" alt=\"Theme HanYajun\"></p>\n<h1 id=\"install-hexo\">Install Hexo</h1>\n<p>Install Node.js  and Git</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>For Mac</span><br><span class=\"line\">brew install node</span><br><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n<p>Install hexo</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>For more:https://hexo.io/zh-cn/index.html</span><br></pre></td></tr></table></figure>\n<h1 id=\"theme-usage\">Theme Usage</h1>\n<h2 id=\"init\">Init</h2>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:Han-Ya-Jun/hexo-theme-hanyajun.git ./hexo-hanyajun</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo-huweihuang</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"modify\">Modify</h2>\n<hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>\nEspecially the section:</p>\n<h3 id=\"deployment\">Deployment</h3>\n<p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sidebar-settings\">Sidebar settings</h3>\n<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># whether or not using Sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-about-description:</span> <span class=\"string\">\"&lt;your description&gt;\"</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-avatar:</span> <span class=\"string\">img/&lt;your</span> <span class=\"string\">avatar</span> <span class=\"string\">path&gt;</span></span><br></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">widgets:</span>         <span class=\"comment\"># here are widget you can use, you can comment out</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">featured-tags</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">short-about</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">recent-posts</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">friends-blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">archive</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">category</span></span><br></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3 id=\"signature-setup\">Signature Setup</h3>\n<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">signature:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># show signature</span></span><br><span class=\"line\"><span class=\"attr\">signature-img:</span> <span class=\"string\">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"go-to-top-icon-setup\">Go to top icon Setup</h3>\n<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3 id=\"post-tag\">Post tag</h3>\n<p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/img/article/tag.png\" alt=\"home_posts_tag-true\"></p>\n<h3 id=\"markdown-render\">Markdown render</h3>\n<p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/hexo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Markdown-it config</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  render:</span></span><br><span class=\"line\"><span class=\"attr\">    html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span>(<span class=\"string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        anchors.options = &#123;</span><br><span class=\"line\">          visible: <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">          placement: <span class=\"string\">'left'</span>,</span><br><span class=\"line\">          icon: ℬ <span class=\"comment\">// this is the header anchor \"unicode\" icon</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"hexo-basics\">Hexo Basics</h2>\n<hr>\n<p>Some hexo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post <span class=\"string\">\"&lt;post name&gt;\"</span> <span class=\"comment\"># you can change post to another layout if you want</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate <span class=\"comment\"># generate the static file</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># run hexo in local environment</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"have-fun-_\">Have fun ^_^</h1>\n<hr>\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n<p>Please <a class=\"github-button\" href=\"https://github.com/Han-Ya-Jun/hexo-theme-hanyajun\" data-icon=\"octicon-star\" aria-label=\"Star huweihuang/hexo-theme-huweihuang on GitHub\" target=\"_blank\" rel=\"noopener\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/Han-Ya-Jun\" aria-label=\"Follow @hanyajun on GitHub\" target=\"_blank\" rel=\"noopener\">Follow</a> would also be appreciated!<br>\nPeace!</p>\n","site":{"data":{"recommended_posts":{"http://www.hanyajun.com/kubernetes/kubernetes_architecture/":[{"title":"kubernetes从入门到放弃--k8s基本概念","permalink":"http://www.hanyajun.com/kubernetes/kubenetes_concept/"}],"http://www.hanyajun.com/kubernetes/kubenetes_concept/":[{"title":"kubernetes从入门到放弃--k8s基本架构","permalink":"http://www.hanyajun.com/kubernetes/kubernetes_architecture/"}],"http://www.hanyajun.com/life/rain_worry/":[{"title":"[随笔] 胡思乱想","permalink":"http://www.huweihuang.com/article/essay/random-thinking/"},{"title":"[随笔] 总得写点什么","permalink":"http://www.huweihuang.com/article/essay/something-has-to-be-written/"},{"title":"[随笔] 坐井观天","permalink":"http://www.huweihuang.com/article/essay/sky-and-well/"}]}}},"excerpt":"","more":"<blockquote>\n<p>This HanYajun theme created by <a href=\"http://www.huweihuang.com/\" target=\"_blank\" rel=\"noopener\">HanYajun</a> modified from the original Porter <a href=\"https://github.com/huweihuang/hexo-theme-huweihuang\" target=\"_blank\" rel=\"noopener\">HuWeihuang</a></p>\n</blockquote>\n<h1>Live Demo</h1>\n<p>HanYajun Blog : <a href=\"http://www.hanyajun.com/\">www.hanyajun.com</a></p>\n<p><img src=\"http://cdn.hanyajun.com/hanyajun_blog.png\" alt=\"Theme HanYajun\"></p>\n<h1>Install Hexo</h1>\n<p>Install Node.js  and Git</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>For Mac</span><br><span class=\"line\">brew install node</span><br><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n<p>Install hexo</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>For more:https://hexo.io/zh-cn/index.html</span><br></pre></td></tr></table></figure>\n<h1>Theme Usage</h1>\n<h2>Init</h2>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:Han-Ya-Jun/hexo-theme-hanyajun.git ./hexo-hanyajun</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo-huweihuang</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2>Modify</h2>\n<hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>\nEspecially the section:</p>\n<h3>Deployment</h3>\n<p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Sidebar settings</h3>\n<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># whether or not using Sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-about-description:</span> <span class=\"string\">\"&lt;your description&gt;\"</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-avatar:</span> <span class=\"string\">img/&lt;your</span> <span class=\"string\">avatar</span> <span class=\"string\">path&gt;</span></span><br></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">widgets:</span>         <span class=\"comment\"># here are widget you can use, you can comment out</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">featured-tags</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">short-about</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">recent-posts</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">friends-blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">archive</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">category</span></span><br></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3>Signature Setup</h3>\n<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">signature:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># show signature</span></span><br><span class=\"line\"><span class=\"attr\">signature-img:</span> <span class=\"string\">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Go to top icon Setup</h3>\n<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3>Post tag</h3>\n<p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/img/article/tag.png\" alt=\"home_posts_tag-true\"></p>\n<h3>Markdown render</h3>\n<p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/hexo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Markdown-it config</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  render:</span></span><br><span class=\"line\"><span class=\"attr\">    html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span>(<span class=\"string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        anchors.options = &#123;</span><br><span class=\"line\">          visible: <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">          placement: <span class=\"string\">'left'</span>,</span><br><span class=\"line\">          icon: ℬ <span class=\"comment\">// this is the header anchor \"unicode\" icon</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h2>Hexo Basics</h2>\n<hr>\n<p>Some hexo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post <span class=\"string\">\"&lt;post name&gt;\"</span> <span class=\"comment\"># you can change post to another layout if you want</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate <span class=\"comment\"># generate the static file</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># run hexo in local environment</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>\n<h1>Have fun ^_^</h1>\n<hr>\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n<p>Please <a class=\"github-button\" href=\"https://github.com/Han-Ya-Jun/hexo-theme-hanyajun\" data-icon=\"octicon-star\" aria-label=\"Star huweihuang/hexo-theme-huweihuang on GitHub\" target=\"_blank\" rel=\"noopener\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/Han-Ya-Jun\" aria-label=\"Follow @hanyajun on GitHub\" target=\"_blank\" rel=\"noopener\">Follow</a> would also be appreciated!<br>\nPeace!</p>\n"}],"PostAsset":[{"_id":"source/_posts/kubenetes_concept/Demo.png","slug":"Demo.png","post":"cjut5v0ij000268p69gez8iv4","modified":1,"renderable":0},{"_id":"source/_posts/hexo-theme-huweihuang/Demo.png","slug":"Demo.png","post":"cjut5v0ir000668p6od56wesb","modified":1,"renderable":0}],"PostCategory":[{"post_id":"cjut5v0ij000268p69gez8iv4","category_id":"cjut5v0ip000468p6g7f0net2","_id":"cjut5v0iz000a68p68dz1zzvz"},{"post_id":"cjut5v0in000368p6gl2tej7u","category_id":"cjut5v0ip000468p6g7f0net2","_id":"cjut5v0j0000d68p6o3obzd12"}],"PostTag":[{"post_id":"cjut5v0ij000268p69gez8iv4","tag_id":"cjut5v0iq000568p6qravtzzr","_id":"cjut5v0ix000968p6zytsrpp8"},{"post_id":"cjut5v0in000368p6gl2tej7u","tag_id":"cjut5v0iq000568p6qravtzzr","_id":"cjut5v0j0000c68p6zwlgjver"},{"post_id":"cjut5v0ir000668p6od56wesb","tag_id":"cjut5v0iz000b68p6x1f6555v","_id":"cjut5v0j1000e68p6swga67h4"}],"Tag":[{"name":"kubernetes","_id":"cjut5v0iq000568p6qravtzzr"},{"name":"Hexo","_id":"cjut5v0iz000b68p6x1f6555v"}]}}